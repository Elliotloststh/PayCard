<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="yuan.paycard.dao.PayModeMapper">
  <resultMap id="BaseResultMap" type="yuan.paycard.model.PayMode">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="payment_type" jdbcType="INTEGER" property="paymentType" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="amount" jdbcType="DOUBLE" property="amount" />
    <result column="biz_id" jdbcType="VARCHAR" property="bizId" />
    <result column="create_time" jdbcType="BIGINT" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, payment_type, name, amount, biz_id, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from paymode
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from paymode
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="yuan.paycard.model.PayMode">
    insert into paymode (id, user_id, payment_type, 
      name, amount, biz_id,
      create_time)
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{paymentType,jdbcType=INTEGER}, 
      #{name,jdbcType=VARCHAR}, #{amount,jdbcType=DOUBLE}, #{bizId,jdbcType=VARCHAR},
      #{createTime,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="yuan.paycard.model.PayMode">
    insert into paymode
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="paymentType != null">
        payment_type,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="bizId != null">
        biz_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="paymentType != null">
        #{paymentType,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DOUBLE},
      </if>
      <if test="bizId != null">
        #{bizId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="yuan.paycard.model.PayMode">
    update paymode
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="paymentType != null">
        payment_type = #{paymentType,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DOUBLE},
      </if>
      <if test="bizId != null">
        biz_id = #{bizId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="yuan.paycard.model.PayMode">
    update paymode
    set user_id = #{userId,jdbcType=BIGINT},
      payment_type = #{paymentType,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      amount = #{amount,jdbcType=DOUBLE},
      biz_id = #{bizId,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="findOne" parameterType="yuan.paycard.model.PayMode" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from paymode
    <where>
      <if test="id != null">AND id = #{id}</if>
      <if test="userId != null">AND user_id = #{userId}</if>
      <if test="paymentType != null">AND payment_type = #{paymentType}</if>
      <if test="name != null">AND name = #{name}</if>
      <if test="amount != null">AND amount = #{amount}</if>
      <if test="bizId != null">AND biz_id = #{bizId}</if>
      <if test="createTime != null">AND create_time = #{createTime}</if>
    </where>
    limit 1
  </select>
</mapper>